services:
  nginx:
    build: etc/nginx/
    volumes:
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
      - ./public:/public
      - ./logs/nginx/access.log:/var/log/nginx/access.log
    ports:
      - "80:80"
    links:
      - app
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1g

  app:
    # Go実装の場合は golang/ PHP実装の場合は php/
    build: python/
    environment:
      ISUCONP_DB_HOST: mysql
      ISUCONP_DB_PORT: 3306
      ISUCONP_DB_USER: root
      ISUCONP_DB_PASSWORD: root
      ISUCONP_DB_NAME: isuconp
      ISUCONP_MEMCACHED_ADDRESS: memcached:11211
    links:
      - mysql
      - memcached
    volumes:
      - ./public:/home/public
      - ./python:/home/webapp
      - ./logs/python/profile.log:/var/log/python/profile.log
      - ./logs/python/profile_wlreporter.log:/var/log/python/profile_wlreporter.log
    init: true
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1g
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    environment:
      #- "TZ=Asia/Tokyo"
      - "MYSQL_ROOT_HOST=%"
      - "MYSQL_ROOT_PASSWORD=root"
    volumes:
      - mysql:/var/lib/mysql
      - ./etc/my.cnf:/etc/my.cnf
      - ./sql:/docker-entrypoint-initdb.d
      - ./logs/mysql/mysql-slow.log:/var/log/mysql/mysql-slow.log
    ports:
      - "3306:3306"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1g
    healthcheck:   # here
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 5s
      retries: 6
      start_period: 30s

  memcached:
    image: memcached:1.6
    ports:
      - "11211:11211"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1g

  # newrelic-infra:
  #   build: logs/newrelic/
  #   cap_add:
  #     - SYS_PTRACE
  #   network_mode: host
  #   privileged: true
  #   pid: host
  #   volumes:
  #     - "/:/host:ro"
  #     - "/var/run/docker.sock:/var/run/docker.sock"

volumes:
  mysql: